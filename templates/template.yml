Description: "Master (+VPC) Template using Sigv4 S3 URLS"
Metadata:
  LICENSE: Apache License Version 2.0
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Network configuration
      Parameters:
      - KeyPairName
      - AvailabilityZones
      - VPCCIDR
      - PublicSubnet1CIDR
      - PublicSubnet2CIDR
    - Label:
        default: Quick Start configuration
      Parameters:
      - KeyPrefix
      - BucketRegion
    ParameterLabels:
      AvailabilityZones:
        default: Availability Zones
      PublicSubnet1CIDR:
        default: Public subnet 1 CIDR
      PublicSubnet2CIDR:
        default: Public subnet 2 CIDR
      BucketRegion:
        default: Bucket Region
      BucketName:
        default: Quick Start S3 bucket name
      KeyPrefix:
        default: Quick Start S3 key prefix
      VPCCIDR:
        default: VPC CIDR
      KeyPairName:
        default: Key Name
      AccessCIDR:
        default: Permitted IP range
Parameters:
  AvailabilityZones:
   Description: >-
      List of Availability Zones to use for the subnets in the VPC. Only two
      Availability Zones are used for this deployment, and the logical order of
      your selections is preserved.
   Type: 'List<AWS::EC2::AvailabilityZone::Name>'
  KeyPairName:
    ConstraintDescription: "Name of an existing EC2 key pair."
    Description: Name of an existing public/private key pair, for connecting to your instance.
    Type: "AWS::EC2::KeyPair::KeyName"
  PublicSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.128.0/20
    Description: CIDR block for the public subnet 1 located in Availability Zone 1.
    Type: String
  PublicSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.144.0/20
    Description: CIDR block for the public subnet 2 located in Availability Zone 2.
    Type: String
  AccessCIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    ConstraintDescription: "CIDR block parameter must be in the form x.x.x.x/x"
    Description: "Allowed CIDR block for external SSH access."
    Default: 10.0.0.0/16
    Type: String
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC.
    Type: String
  BucketName:
    Default: 'tonynv'
    Description: "Name of S3 bucket where cloudfromation source is staged (For AWS QuickStart this value would default to aws-quickstart)"
    Type: String
  AppendRegiontoBucketName:
    Default: 'false'
    AllowedValues: ['true', 'false']
    Description: "Append Current region to BucketName (BucketName-us-east-1)"
    Type: String
  UseCrossRegionStagingBucket:
    Default: 'true'
    AllowedValues: ['true', 'false']
    Description: "Set to true if template are staged in a region other than the launch region (Requires AppendRegiontoBucketName to be false)"
    Type: String
  BucketRegion:
    Default: 'us-east-1'
    Description: "Region of Staging bucket (BucketName)"
    Type: String
  KeyPrefix:
    AllowedPattern: "^[0-9a-zA-Z-/]*$"
    ConstraintDescription: "Key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Default: 'sigv2-to-sigv4/'
    Description: "S3 keyprefix for the Cloudformation assets"
    Type: String
Conditions:
  AddRegiontoBucketName: !Equals  ['true', !Ref AppendRegiontoBucketName]
  CrossRegionStagingBucket: !Equals  ['true', !Ref UseCrossRegionStagingBucket]
Resources:
  VPCStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template
        - S3Region: !If
             - AddRegiontoBucketName
             - !Ref AWS::Region
             - BucketRegion: !f
               - UseCrossRegionStagingBucket
               - !Ref AWS::Region
               - !Ref BucketRegion
          S3Bucket: !If
             - AddRegiontoBucketName
             - !Sub ${BucketName}-${AWS::Region}
             - !Ref BucketName
      Parameters:
        AvailabilityZones: !Join
          - ','
          - !Ref AvailabilityZones
        KeyPairName: !Ref KeyPairName
        NumberOfAZs: '2'
        PublicSubnet1CIDR: !Ref PublicSubnet1CIDR
        PublicSubnet2CIDR: !Ref PublicSubnet2CIDR
        VPCCIDR: !Ref VPCCIDR
  ExampleStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${KeyPrefix}templates/authenticated-s3.template.yaml
        - S3Region: !If
             - AddRegiontoBucketName
             - !Ref AWS::Region
             - !If
               - CrossRegionStagingBucket
               - !Ref AWS::Region
               - !Ref BucketRegion
          S3Bucket: !If
             - AddRegiontoBucketName
             - !Sub ${BucketName}-${AWS::Region}
             - !Ref BucketName
      Parameters:
        BucketName: !Ref BucketName
        KeyPrefix: !Ref KeyPrefix
        KeyPairName: !Ref KeyPairName
        AccessCIDR: !Ref AccessCIDR
        AppendRegiontoBucketName: !Ref AppendRegiontoBucketName
        UseCrossRegionStagingBucket : !Ref UseCrossRegionStagingBucket
        SubnetId:
          Fn::GetAtt:
          - VPCStack
          - Outputs.PublicSubnet1ID
        VPCID:
          Fn::GetAtt:
          - VPCStack
          - Outputs.VPCID
